## This generates an ever-increasing number based on the date and build. Useful for CI\CD scenario's.
name: $(date:yyyy.M.d)$(rev:.r) 

## GITHUB: specify the Pull Request Builds in yaml as below.
## Azure Devops: setup Pull Request Builds via "manage repositories" - "Branch Policies" in the Azure Devops UI instead. 
pr:
  branches:
    include:
    - main

## Azure Devops: The trigger specified below is only evaluated if the build is triggered by YAML, not by a Branch Policy
## Therefore the excluded trigger paths must also manually be added to the the Pull Request Builds in the Azure Devops UI. 
## The path filter for the branches below would be *; !/.vscode/*; !/docs/*; !/*.md 
trigger:
  branches:
    include: 
    - main
  paths:
    exclude:
    - /.vscode/*
    - /docs/*
    - /*.md
    - .editorconfig
    - /**/.editorconfig
    - .gitignore
    - /**/.gitignore

resources:
  repositories:
    - repository: yamlTemplates
      type: github
      name: "#UserName/#RepoName"
      endpoint: #AzureDevopsGithubEndpointName
      #ref: string  # ref name to use; defaults to 'refs/heads/main'

variables:
  # File includes can ONLY have a 'variables' section
  - template: build/authors.yml
  #- group: '#GroupName' # Groups are linked to Azure Devops -> Pipelines > Library > Variable Group. Keep secrets there instead of in the actual source. 
  # Other values as key-value pair, or Groups won't work. https://learn.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&tabs=yaml#use-a-variable-group
  #- name: Key 
  #  value: 'Value'

stages:
- stage: Build
  displayName: Buildstage
  pool: #default 
    vmImage: 'ubuntu-latest'
  jobs:
  - job: Build
    displayName: Buildjob
    variables:
      # preventing git shallow clone to fix gitversion error  https://github.com/GitTools/GitVersion/issues/3091
      Agent.Source.Git.ShallowFetchDepth: 0
    steps:
    # Link to gitversion template.
    - template: AzDO/yaml/steps/computeGitVersion.yml@yamlTemplates
    
